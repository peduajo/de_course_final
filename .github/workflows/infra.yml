name: Terraform infra
on:
  push:
    branches: [dev, main]

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    # ------------- variables de entorno para Terraform y los DAGs -----
    env:
      TF_VAR_bucket_name:      ${{ github.ref == 'refs/heads/main' && 'airplanes-bucket_prod' || 'airplanes-bucket_dev' }}
      TF_VAR_tmp_bucket_name:  ${{ github.ref == 'refs/heads/main' && 'dataproc-temp-europe-west1-828225226997-fckhkym8_prod' || 'dataproc-temp-europe-west1-828225226997-fckhkym8_dev' }}
      TF_VAR_bq_dataset_name:  ${{ github.ref == 'refs/heads/main' && 'flights_dataset_prod'  || 'flights_dataset_dev' }}
      TF_VAR_project_id:       taxy-rides-ny-459209

    steps:
    - uses: actions/checkout@v4

    # OIDC → SA de despliegue
    - uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
        service_account:            ${{ secrets.GCP_DEPLOY_SA }}

    - uses: hashicorp/setup-terraform@v3
      with: { terraform_version: 1.8.5 }

    # Seleccionar (o crear) workspace según la rama
    - name: Init + Select workspace
      run: |
        cd terraform
        terraform init -input=false
        WS=$( [[ "${GITHUB_REF##*/}" == "main" ]] && echo prod || echo dev )
        terraform workspace select "$WS" || terraform workspace new "$WS"

    - name: Terraform Plan
      run: terraform -chdir=terraform plan -input=false -no-color

    # Auto-apply en dev; en main se aplica sólo tras merge (no en PR)
    - name: Terraform Apply
      if: github.ref == 'refs/heads/dev' || (github.ref == 'refs/heads/main' && github.event_name != 'pull_request')
      run: terraform -chdir=terraform apply -auto-approve -input=false
